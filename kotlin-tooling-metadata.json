/* SpoofViewport - Versión Ligera */
(function() {
    if (window.screen.width >= 3840 && window.screen.height >= 2160) return;
    const viewportContent = "width=3840, height=2160, initial-scale=1.0";
    let viewport = document.querySelector('meta[name="viewport"]');
    if (viewport) viewport.content = viewportContent;
    else {
        viewport = document.createElement("meta");
        viewport.name = "viewport";
        viewport.content = viewportContent;
        document.head.appendChild(viewport);
    }
})();

/* MenuTrigger - Versión Ligera */
(function() {
    function getSearchBar() {
        const searchBars = document.querySelectorAll('[idomkey="ytLrSearchBarSearchTextBox"]');
        return searchBars[searchBars.length - 1] || null;
    }
    function createMenuButton() {
        const searchBar = getSearchBar();
        if (!searchBar || searchBar.parentNode.querySelector('button[data-notubetv="menu"]')) return;
        const menuButton = document.createElement("button");
        menuButton.setAttribute("data-notubetv", "menu");
        menuButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" height="56px" viewBox="0 -960 960 960" width="56px" fill="#FFFFFF" fill-opacity="0.8"><path d="M480-480q0-91 64.5-155.5T700-700q91 0 155.5 64.5T920-480H480ZM260-260q-91 0-155.5-64.5T40-480h440q0 91-64.5 155.5T260-260Zm220-220q-91 0-155.5-64.5T260-700q0-91 64.5-155.5T480-920v440Zm0 440v-440q91 0 155.5 64.5T700-260q0 91-64.5 155.5T480-40Z"/></svg>`;
        Object.assign(menuButton.style, {
            marginLeft: "54px", padding: "35px",
            background: "rgba(255, 255, 255, 0.1)", border: "none", borderRadius: "88px"
        });
        const parent = searchBar.parentNode;
        Object.assign(parent.style, { display: "flex", flexDirection: "row", alignItems: "center" });
        parent.insertBefore(menuButton, searchBar.nextSibling);
        return menuButton;
    }
    document.addEventListener("keydown", function(event) {
        if (event.key === "ArrowRight") {
            const searchBar = getSearchBar();
            if (searchBar && searchBar.classList.contains("ytLrSearchTextBoxFocused")) {
                modernUI();
                const menuButton = document.querySelector('button[data-notubetv="menu"]');
                if (menuButton) menuButton.style.background = "white";
            }
        }
    });
    new MutationObserver(() => {
        if (getSearchBar() && !document.querySelector('[data-notubetv="menu"]')) createMenuButton();
    }).observe(document.body, { childList: true, subtree: true });
})();

/* ExitBridge - Versión Ligera */
(function() {
    new MutationObserver((mutations, observer) => {
        const exitButton = document.querySelector(".ytVirtualListItemLast ytlr-button.ytLrButtonLargeShape");
        if (exitButton) {
            exitButton.addEventListener("keydown", (e) => {
                if (e.key === "Enter" && typeof ExitBridge !== "undefined" && ExitBridge.onExitCalled) {
                    e.preventDefault(); e.stopPropagation(); ExitBridge.onExitCalled();
                }
            }, true);
            observer.disconnect();
        }
    }).observe(document.body, { childList: true, subtree: true });
})();

/* Configuración Principal - Versión Ligera */
(function() {
    "use strict";
    const CONFIG_KEY = "ytaf-configuration";
    const defaultConfig = {
        enableAdBlock: true, enableSponsorBlock: true,
        enableSponsorBlockSponsor: true, enableSponsorBlockIntro: true,
        enableSponsorBlockOutro: true, enableSponsorBlockInteraction: true,
        enableSponsorBlockSelfPromo: true, enableSponsorBlockMusicOfftopic: true,
        enableShorts: true,
    };
    window.localConfig = (() => {
        try { return JSON.parse(window.localStorage[CONFIG_KEY] || JSON.stringify(defaultConfig)); }
        catch { return {...defaultConfig}; }
    })();
    window.configRead = (key) => window.localConfig[key] ?? defaultConfig[key];
    window.configWrite = (key, value) => {
        window.localConfig[key] = value;
        window.localStorage[CONFIG_KEY] = JSON.stringify(window.localConfig);
    };
    const showToast = (title, subtitle) => {
        resolveCommand({ openPopupAction: { popupType: "TOAST",
            popup: { overlayToastRenderer: { title: { simpleText: title }, subtitle: { simpleText: subtitle } } } } });
    };
    const originalParse = JSON.parse;
    JSON.parse = function(text) {
        const result = originalParse.apply(this, arguments);
        if (configRead("enableAdBlock")) {
            if (result.adPlacements) result.adPlacements = [];
            if (result.playerAds) result.playerAds = false;
            if (result.adSlots) result.adSlots = [];
        }
        if (!configRead("enableShorts")) {
            const contents = result?.contents?.tvBrowseRenderer?.content?.tvSurfaceContentRenderer?.content?.sectionListRenderer?.contents;
            if (contents) {
                result.contents.tvBrowseRenderer.content.tvSurfaceContentRenderer.content.sectionListRenderer.contents =
                    contents.filter(shelve => shelve.shelfRenderer?.tvhtml5ShelfRendererType !== "TVHTML5_SHELF_RENDERER_TYPE_SHORTS");
            }
        }
        return result;
    };

    // SponsorBlock optimizado con arranque rápido
    class SponsorBlockHandler {
        constructor(videoID) { this.videoID = videoID; this.active = true; }
        async init() {
            if (!configRead("enableSponsorBlock")) return;
            try {
                const videoHash = (await this.sha256(this.videoID)).substring(0, 4);
                const categories = ["sponsor","intro","outro","interaction","selfpromo","music_offtopic"];
                const resp = await new Promise(resolve => {
                    window.onNetworkBridgeResponse = resolve;
                    NetworkBridge.fetch(
                        `https://api.sponsor.ajay.app/api/skipSegments/${videoHash}?categories=${encodeURIComponent(JSON.stringify(categories))}`,
                        this.videoID
                    );
                });
                const result = JSON.parse(resp);
                if (!result?.segments?.length) return;
                this.segments = result.segments;
                this.skippableCategories = this.getSkippableCategories();
                this.attachVideo();
            } catch (error) { console.warn("SponsorBlock error:", error); }
        }
        getSkippableCategories() {
            const c = [];
            if (configRead("enableSponsorBlockSponsor")) c.push("sponsor");
            if (configRead("enableSponsorBlockIntro")) c.push("intro");
            if (configRead("enableSponsorBlockOutro")) c.push("outro");
            if (configRead("enableSponsorBlockInteraction")) c.push("interaction");
            if (configRead("enableSponsorBlockSelfPromo")) c.push("selfpromo");
            if (configRead("enableSponsorBlockMusicOfftopic")) c.push("music_offtopic");
            return c;
        }
        attachVideo() {
            this.video = document.querySelector("video");
            if (!this.video) { setTimeout(() => this.attachVideo(), 100); return; }
            // Espera 2s antes de enganchar SponsorBlock → video arranca fluido
            this.video.addEventListener("play", () => setTimeout(() => this.scheduleSkip(), 2000));
        }
        scheduleSkip() {
            if (!this.active || !this.video || this.video.paused) return;
            const current = this.video.currentTime;
            const nextSegment = this.segments
                .filter(seg => seg.segment[0] >= current - 0.2)
                .sort((a, b) => a.segment[0] - b.segment[0])[0];
            if (!nextSegment) return;
            const [start, end] = nextSegment.segment;
            if (current >= end) return;
            setTimeout(() => {
                if (this.video.paused || !this.skippableCategories.includes(nextSegment.category)) return;
                showToast("SponsorBlock", `Skipping ${nextSegment.category}`);
                this.video.currentTime = end;
                this.scheduleSkip();
            }, Math.max(0, (start - current) * 1000));
        }
        async sha256(ascii) {
            const buffer = new TextEncoder().encode(ascii);
            const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);
            return Array.from(new Uint8Array(hashBuffer)).map(b => b.toString(16).padStart(2,'0')).join('');
        }
        destroy() { this.active = false; this.segments = null; }
    }

    window.sponsorblock = null;
    window.addEventListener("hashchange", () => {
        const match = location.hash.match(/[?&]v=([^&]+)/);
        const videoID = match ? match[1] : null;
        if (!videoID || !configRead("enableSponsorBlock")) {
            if (window.sponsorblock) window.sponsorblock.destroy(); return;
        }
        if (!window.sponsorblock || window.sponsorblock.videoID !== videoID) {
            if (window.sponsorblock) window.sponsorblock.destroy();
            window.sponsorblock = new SponsorBlockHandler(videoID);
            window.sponsorblock.init();
        }
    });

    // Init más liviano
    const init = () => {
        const videoElement = document.querySelector("video");
        if (videoElement) {
            const style = document.createElement("style");
            style.textContent = `.ytLrWatchDefaultShadow {
                background-image: linear-gradient(to bottom, rgba(0,0,0,0) 0, rgba(0,0,0,0.8) 90%) !important;
                background-color: rgba(0,0,0,0.3) !important;
            }`;
            document.head.appendChild(style);
            clearInterval(initInterval);
        }
    };
    const initInterval = setInterval(init, 250);
})();
            `;
            document.head.appendChild(style);
            clearInterval(initInterval);
        }
    };

    const initInterval = setInterval(init, 250);
})();
